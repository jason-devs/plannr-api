import mongoose from "mongoose";
import slugify from "slugify";
import * as relationships from "./relationships.js";

const %%VARIABLENAME%%Schema = mongoose.Schema({
  name: {
    type: String,
  },

  %%PARENTVARIABLENAME%%: {
    type: mongoose.Schema.ObjectId,
    ref: "%%PARENTMODELNAME%%",
  },

  createdAt: {
    type: Date,
  },
});

%%VARIABLENAME%%Schema.pre("save", async function (next) {
  this.slug = slugify(this.name, { lower: true });
  this.createdAt = new Date();
  next();
});

%%VARIABLENAME%%Schema.post("findOneAndDelete", async function (%%VARIABLENAME%%) {
  await relationships.afterDeleteOne(%%VARIABLENAME%%, "%%PARENTNAME%%", "%%NAME%%");
});

%%VARIABLENAME%%Schema.post("deleteMany", async function () {
  await relationships.afterDeleteMany("%%PARENTNAME%%", "%%NAME%%", this);
});

%%VARIABLENAME%%Schema.post("save", async function (%%VARIABLENAME%%) {
  await relationships.afterAddOne(%%VARIABLENAME%%, "%%PARENTNAME%%", "%%NAME%%");
});

export default %%VARIABLENAME%%Schema;

/*

NOTE: Add the following to modelRegistry.js:

  import %%VARIABLENAME%%Schema from "./%%VARIABLENAME%%Schema.js"
  
  %%MODELNAME%%: mongoose.model("%%MODELNAME%%", roleSchema),

NOTE: And don't forget to add me to any DELETE logic in %%PARENTVARIABLENAME%%Schema.js

*/
